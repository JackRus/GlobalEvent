@model Event

<h1> @Model.Name </h1>

@if(ViewBag.Message != null)
{
	<div id="tog" class="f-attention">@ViewBag.Message <br/>
        <a class="btn mybtn-sm-red tog inline m5-0-5-0" data-id="tog" >OK</a>
    </div>
}
<!-- buttons -->
<div class="text-center m20-0-20-0">
    <a asp-action="Events" class="btn mybtn bgBase">BACK</a>
    <div class="dropdown inline">
        <button class="btn mybtn bgBro dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Actions <span style="font-size: 0.7em;">&nbsp &#x25BC;</span>
        </button>
        <ul class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenu2">
            @if(await AuthorizationService.AuthorizeAsync(User, "Event Editor"))
            {
                <li><a asp-action="EditEvent" asp-route-id="@Model.ID">EDIT</a></li>
            }
            @if(await AuthorizationService.AuthorizeAsync(User, "Event Killer"))
            {
                <li><a asp-action="DeleteEvent" asp-route-id="@Model.ID">DELETE</a></li>
            }
            @if(await AuthorizationService.AuthorizeAsync(User, "Tickets Viewer"))
            {
                <li><a asp-action="Index" asp-controller="Ticket" asp-route-id="@Model.ID" >MANAGE TICKETS</a></li>
            }
            @if(await AuthorizationService.AuthorizeAsync(User, "Products Viewer"))
            {
                <li><a asp-action="Index" asp-controller="Product" asp-route-id="@Model.ID" >MANAGE PRODUCTS</a></li>
            }
            @if(await AuthorizationService.AuthorizeAsync(User, "VTypes Viewer"))
            {
                <li><a asp-action="Index" asp-controller="VType" asp-route-id="@Model.ID" >MANAGE VISITOR TYPES</a></li>
            }
        </ul>
    </div>
</div>
<!-- end of buttons -->

<div class="row">
    <div class="col-md-6">
        <div class="stat-name" style="background-color: @(Model.Status ? "#3cb371" : "grey"); color: #fff; border-bottom: none;">Status: <span class="stat">@(Model.Status ? "ACTIVE" : "INACTIVE")</span></div>
    </div>

    <div class="col-md-6">
        <div class="stat-name">ID:<span class="stat">@Model.ID</span></div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="stat-name">Starts: <span class="stat">@Model.TimeStart on @Model.DateStart </span></div>
    </div>

    <div class="col-md-6">
        <div class="stat-name">Ends: <span class="stat">@Model.TimeEnd on @Model.DateEnd </span></div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="stat-name">Tickets Sold(out of) / Orders #: <span class="stat">@Model.TicketsSold (@ViewBag.AllTickets) / @Model.Orders.Count() </span></div>
    </div>

    <div class="col-md-6">
        <div class="stat-name">Free tickets: <span class="stat">@(Model.Free == true ? "Yes" : "No") </span></div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="stat-name">Visitors CheckIned / Registered: <span class="stat"> @ViewBag.CheckIned / @ViewBag.Registered </span></div>
    </div>

    <div class="col-md-6">
        <div class="stat-name">Revenue Fact / Plan: <span class="stat">$@Model.RevFact / $@Model.RevPlan </span></div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="stat-name">Eventbrite's Token: 
        @if(await AuthorizationService.AuthorizeAsync(User, "Is Owner"))
            {<span class="stat">@Model.HttpBase </span>}
        else
            {<span class="stat">****************</span>}
        </div>
    </div>

    <div class="col-md-6">
        <div class="stat-name">Eventbrite's Event ID: <span class="stat">@Model.EventbriteID </span></div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="stat-name" style="text-align: justify;">Ticket Types: 
            <br />
            @if (@Model.Tickets.Count() < 1)
            {
                <span>Not created yet</span>
            }
            else 
            {  
                <ul style="margin: 0px auto;">
                @foreach(Ticket t in Model.Tickets)
                {
                    <li><strong> @t.Type, Price: $@t.Price </strong> </li>
                }  
                </ul> 
            }      
        </div>
        <div class="stat-name" style="text-align: justify;"> Products/Events: 
            <br />
            @if (@Model.Products.Count() < 1)
            {
                <span>Not created yet</span>
            }
            else 
            {  
                <ul style="margin: 0px auto;">
                @foreach(Product p in Model.Products)
                {
                    <li><strong>@p.Name, Capacity: @p.Capacity</strong> </li>
                }  
                </ul> 
            }       
        </div>
        <div class="stat-name" style="text-align: justify;"> Visitor Types: 
            <br />
            @if (@Model.Types.Count() < 1)
            {
                <span>Not created yet</span>
            }
            else 
            {  
                <ul style="margin: 0px auto;">
                @foreach(VType t in Model.Types)
                {
                    <li><strong>@t.Name: @(t.Free == true ? "Free" : "Paid")</strong> </li>
                }  
                </ul> 
            }
        </div>

    </div>
    <div class="col-md-6">
        <div class="stat-name">Event's Page: <br /> <a href="@Model.TicketLink" @Model.TicketLink target="_new"><strong> @Model.TicketLink </strong> </a></div>
        <div class="stat-name" style="text-align: justify;">Description: <br /> <strong> @Model.Description </strong>  </div>
    </div>
</div>

